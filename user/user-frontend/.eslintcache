[{"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\index.js":"1","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\protectedRoute\\index.js":"2","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\register\\index.js":"3","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\hall\\index.js":"4","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\login\\index.js":"5","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\url.js":"6","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\protectedRoute\\authentication.js":"7","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listUser\\index.js":"8","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\socket.js":"9","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\game\\index.js":"10","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\board\\index.js":"11","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\square\\index.js":"12","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\chat\\index.js":"13"},{"size":960,"mtime":1607771901498,"results":"14","hashOfConfig":"15"},{"size":550,"mtime":1607143594311,"results":"16","hashOfConfig":"15"},{"size":5154,"mtime":1607140771805,"results":"17","hashOfConfig":"15"},{"size":4991,"mtime":1607784454597,"results":"18","hashOfConfig":"15"},{"size":4351,"mtime":1607774156778,"results":"19","hashOfConfig":"15"},{"size":233,"mtime":1607140049437,"results":"20","hashOfConfig":"15"},{"size":347,"mtime":1607143670214,"results":"21","hashOfConfig":"15"},{"size":2136,"mtime":1607774616260,"results":"22","hashOfConfig":"15"},{"size":848,"mtime":1607834104135,"results":"23","hashOfConfig":"15"},{"size":1748,"mtime":1607834144266,"results":"24","hashOfConfig":"15"},{"size":678,"mtime":1607788545859,"results":"25","hashOfConfig":"15"},{"size":208,"mtime":1607788354653,"results":"26","hashOfConfig":"15"},{"size":1031,"mtime":1607833302064,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11ct4i2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\index.js",[],["61","62"],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\protectedRoute\\index.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\register\\index.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\hall\\index.js",["63","64"],"import { Box, Button, Dialog, DialogTitle, Grid, Typography,DialogContentText,DialogContent,DialogActions, TextField } from '@material-ui/core';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport React , {useState,useEffect} from 'react';\r\nimport ListUser from '../listUser';\r\nimport {initializeSocket,getUsetsOnline} from '../socket';\r\nimport URL from '../url';\r\nimport {joinGame} from '../socket';\r\n\r\nexport default function Hall(props){\r\n    const location = useLocation();\r\n    const [usersOnline,setUsersOnline] = useState([]);\r\n    const [open, setOpen] = useState(false)\r\n    const [idGame,setIdGame] = useState(0);\r\n    const [message,setMessage] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        initializeSocket(location.state.idUser);\r\n        getUsetsOnline(users => {\r\n            let newUsersOnlineArray =[];\r\n            for(const user in users)\r\n            {\r\n                newUsersOnlineArray = [...newUsersOnlineArray,users[user]];\r\n\r\n            }\r\n            setUsersOnline(newUsersOnlineArray);\r\n        });\r\n    },[]);\r\n\r\n    const handleJoinNewGameClick = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n\r\n    const handleNewGameClick = async () => {\r\n        const response = await fetch(URL.getUrl()+\"game\",{\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }});\r\n\r\n        const data = await response.json();\r\n\r\n        history.push({\r\n            pathname: '/game/'+data.id,\r\n            state: {idUser: location.state.idUser}});\r\n    }\r\n\r\n    const handleChangeIdGame = (e) => {\r\n        setIdGame(e.target.value);\r\n    }\r\n\r\n    const handleJoinGameSubmit = async (e) => {\r\n        e.preventDefault();\r\n       \r\n        const response = await fetch(URL.getUrl()+\"game/check\",{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                idGame: idGame\r\n            })});\r\n        const data = await response.json();\r\n        if(data === true)\r\n        {\r\n            joinGame(idGame,location.state.idUser,(data)=>{\r\n                if(data.success === true){\r\n                    history.push({\r\n                        pathname: '/game/'+idGame,\r\n                        state: {idUser: location.state.idUser}});\r\n                }\r\n                else{\r\n                    setMessage(\"Room is full\");\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            setMessage('ID Game is not correct');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box m={3}>\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button onClick={handleNewGameClick}>New Game</Button>\r\n                        <Button onClick={handleJoinNewGameClick}>Join Game</Button>\r\n                        \r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">                           \r\n                            <DialogTitle id=\"form-dialog-title\">Join Game</DialogTitle>\r\n                            <form onSubmit={handleJoinGameSubmit}>\r\n                                <DialogContent>\r\n                                    <TextField\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"name\"\r\n                                        label=\"ID Game\"\r\n                                        type=\"text\"\r\n                                        fullWidth\r\n                                        onChange = {handleChangeIdGame}\r\n                                    />\r\n                                    <Typography>{message}</Typography>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button color=\"primary\" type=\"submit\">\r\n                                    Join\r\n                                </Button>\r\n                                </DialogActions>\r\n                            </form>\r\n                        </Dialog>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item lg={3} xs={3} sm={3} md={3}>\r\n                    <ListUser usersOnline={usersOnline}></ListUser>\r\n                </Grid>\r\n                <Grid item lg={9}>\r\n                    Chat container\r\n                </Grid>\r\n            </Grid> \r\n        </Box>\r\n        \r\n    );\r\n}\r\n","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\login\\index.js",["65"],"import { Button, CssBaseline, Grid, makeStyles, MuiThemeProvider, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React , {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport URL from '../url';\r\nimport Auth from '../protectedRoute/authentication'\r\n\r\nconst useStyles = makeStyles({\r\n    paperContainer: {\r\n        paddingTop: '3em',\r\n        paddingLeft: '1em',\r\n        paddingRight: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    googleLoginBtn:{\r\n        marginTop: '1em',\r\n        width: '100%'\r\n    },\r\n    facebookLoginBtn:{\r\n        marginTop: '10px',\r\n        background: '#365899',\r\n        border: '1px solid transparent',\r\n        borderRadius: '2px',\r\n        alignItems: 'center',\r\n        boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\r\n        color: '#ffffff',\r\n        fontSize: '14px',\r\n        width: '100%',\r\n        textAlign: 'left',\r\n        fontWeight: '500',\r\n        display: 'inline-flex',\r\n        paddingTop: '10px',\r\n        paddingRight: '10px',\r\n        paddingBottom: '10px',\r\n        paddingLeft: '15px'\r\n    },\r\n});\r\n\r\nexport default function Login(props){\r\n    const [loginData,setLoginData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [message,setMessage] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const submitLogin = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(URL.getUrl()+\"login\",{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n        username: loginData.username,\r\n        password: loginData.password})});\r\n\r\n        if(response.ok)\r\n        { \r\n            const data = await response.json();\r\n        //    localStorage.setItem(\"id\",data.account.id);\r\n            localStorage.setItem('token',data.token); \r\n            Auth.logIn(() => {\r\n                props.history.push({\r\n                    pathname: \"/hall\",\r\n                    state: { idUser: data.account.id}\r\n                });\r\n            });               \r\n        }\r\n        else setMessage(\"Username or password is not correct\")\r\n    }\r\n\r\n    const onChangeUsername = (e) => {\r\n        setLoginData({...loginData, username: e.target.value});\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setLoginData({...loginData, password: e.target.value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MuiThemeProvider>\r\n                <CssBaseline></CssBaseline>\r\n                <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height: '100vh'}}>\r\n                    <Grid item >\r\n                        <Typography variant={\"h4\"}>Caro Game</Typography>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Grid item lg={4}>\r\n                        <Paper elevation={3} className={classes.paperContainer}>\r\n                            <Typography style={{textAlign: 'center'}}>Login</Typography>\r\n                            <form onSubmit={submitLogin}>\r\n                                <TextField  name=\"username\" label=\"Username\" onChange={onChangeUsername} fullWidth>\r\n                                </TextField>\r\n                                <TextField  name=\"password\" label=\"Password\" type=\"password\" onChange={onChangePassword} fullWidth>\r\n                                </TextField>\r\n                                <br></br>\r\n                                <Typography style={{color: 'red'}}>{message}</Typography>\r\n                                <br></br>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n                                    Login\r\n                                </Button>\r\n                            </form>\r\n                                <br></br>\r\n                                <br></br>\r\n                                <Typography style={{textAlign: 'center'}}>or <Link to=\"/register\">Register</Link> </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        </>);\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\url.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\protectedRoute\\authentication.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listUser\\index.js",["66","67"],"import { Grid, GridList, GridListTile, makeStyles, Typography } from '@material-ui/core';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport React, { useState,useEffect } from 'react';\r\nimport URL from '../url'; \r\n\r\n\r\nconst useStyles = makeStyles({\r\n    userContainer: {\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)',\r\n        height : '100vh'\r\n    },\r\n    stateUserIcon:{\r\n        fontSize: '12px'\r\n    },\r\n    stateUserIconColorOnline:{\r\n        color: '#00d700'\r\n    },\r\n    stateUserIconColorOffline:{\r\n        color: '#bcbcbc'\r\n    }\r\n});\r\n\r\nexport default function ListUser({usersOnline})\r\n{\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        const getAllUsers = async () => {\r\n            const users = await fetch(URL.getUrl()+\"users\",{\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'}\r\n            })\r\n            const data = await users.json();\r\n            setUsers(data);\r\n        }\r\n        getAllUsers();\r\n    },[]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"column\" className={classes.userContainer}>\r\n            <Typography>LIST OF USERS</Typography>\r\n            {\r\n                users.map((u,key) => (\r\n                    Object.values(usersOnline).indexOf(u.id) >= 0 ?\r\n                        <Grid item key={key} >\r\n                            <Typography><FiberManualRecordIcon className={[classes.stateUserIconColorOnline,classes.stateUserIcon].join(\" \")}></FiberManualRecordIcon>{u.name}</Typography>\r\n                        </Grid>\r\n                   : \r\n                        <Grid item key={key} >\r\n                            <Typography><FiberManualRecordIcon className={[classes.stateUserIconColorOffline,classes.stateUserIcon].join(\" \")}></FiberManualRecordIcon>{u.name}</Typography>\r\n                        </Grid>\r\n                ))}\r\n        </Grid>\r\n        \r\n    );\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\socket.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\game\\index.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\board\\index.js",["68"],"import { Box, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Square from '../square';\r\n\r\nexport default function Board(props){\r\n    const nRows = 50;\r\n    const nCols = 50;\r\n    const squares = new Array(nRows*nCols).fill(0);\r\n\r\n    const handleClickSquare = (i) => {\r\n        console.log(Math.floor(i/50),(i%50),\"Clicked\");\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <Box flexWrap=\"wrap\" style={{width: \"1000px\"}}>\r\n            {\r\n                squares.map((value,key) => (\r\n                    <Square key={key} clicked={() => handleClickSquare(key)}></Square>\r\n                ))\r\n            }\r\n            </Box>\r\n        </>)\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\square\\index.js",["69"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function Square({clicked}){\r\n    return(<button style={{width: '20px',height: '20px'}} onClick={clicked}></button>)\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\chat\\index.js",["70","71","72"],"import { Box, Button, GridList, GridListTile, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport React ,{useState} from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    chatBox: {\r\n        height: '500px',\r\n        overflow: 'scroll',\r\n    }\r\n});\r\n\r\nexport default function Chat({chatHistory,handleChangeText,handleSubmitChat}){\r\n    console.log(chatHistory);\r\n    const classes = useStyles();\r\n    return(\r\n        <Box>\r\n            <Box cellHeight={160} className={classes.chatBox}>\r\n                {\r\n                    chatHistory.map((value,key) => (\r\n                    <Typography key={key}>{value.iduser}: {value.content}</Typography>\r\n                    ))\r\n                }\r\n            </Box>\r\n            <Box border={1}>\r\n                <form onSubmit={handleSubmitChat}>\r\n                    <TextField onChange={handleChangeText} fullWidth></TextField>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </form>\r\n            </Box>\r\n            \r\n        </Box>);\r\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":61,"nodeType":"79","messageId":"80","endLine":1,"endColumn":78},{"ruleId":"81","severity":1,"message":"82","line":28,"column":7,"nodeType":"83","endLine":28,"endColumn":9,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":44,"column":11,"nodeType":"79","messageId":"80","endLine":44,"endColumn":18},{"ruleId":"77","severity":1,"message":"86","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"87","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":38},{"ruleId":"77","severity":1,"message":"88","line":1,"column":15,"nodeType":"79","messageId":"80","endLine":1,"endColumn":21},{"ruleId":"77","severity":1,"message":"88","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":1,"column":23,"nodeType":"79","messageId":"80","endLine":1,"endColumn":31},{"ruleId":"77","severity":1,"message":"87","line":1,"column":33,"nodeType":"79","messageId":"80","endLine":1,"endColumn":45},{"ruleId":"77","severity":1,"message":"89","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":24},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'DialogContentText' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.idUser'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'history' is assigned a value but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [location.state.idUser]",{"range":"95","text":"96"},[1093,1095],"[location.state.idUser]"]