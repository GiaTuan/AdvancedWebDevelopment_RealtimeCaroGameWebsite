[{"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\index.js":"1","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\hall\\index.js":"2","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\userDetail\\index.js":"3","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\login\\index.js":"4","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\register\\index.js":"5","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\history\\index.js":"6","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\game\\index.js":"7","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\gameDetail\\index.js":"8","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\url.js":"9","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\socket.js":"10","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listUser\\index.js":"11","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listGames\\index.js":"12","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\board\\index.js":"13","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\chat\\index.js":"14","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\boardHistory\\index.js":"15","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\square\\index.js":"16","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\forgetPassword\\index.js":"17","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\changePassword\\index.js":"18"},{"size":1908,"mtime":1609648956112,"results":"19","hashOfConfig":"20"},{"size":10587,"mtime":1609645503013,"results":"21","hashOfConfig":"20"},{"size":5035,"mtime":1609648660421,"results":"22","hashOfConfig":"20"},{"size":6823,"mtime":1609650410594,"results":"23","hashOfConfig":"20"},{"size":5128,"mtime":1609646160710,"results":"24","hashOfConfig":"20"},{"size":3056,"mtime":1608870154000,"results":"25","hashOfConfig":"20"},{"size":6666,"mtime":1609647543588,"results":"26","hashOfConfig":"20"},{"size":4977,"mtime":1609647889693,"results":"27","hashOfConfig":"20"},{"size":233,"mtime":1607140050000,"results":"28","hashOfConfig":"20"},{"size":2191,"mtime":1609646665854,"results":"29","hashOfConfig":"20"},{"size":3770,"mtime":1609599269830,"results":"30","hashOfConfig":"20"},{"size":741,"mtime":1608694876000,"results":"31","hashOfConfig":"20"},{"size":513,"mtime":1608883544000,"results":"32","hashOfConfig":"20"},{"size":1455,"mtime":1608876564000,"results":"33","hashOfConfig":"20"},{"size":985,"mtime":1608885130000,"results":"34","hashOfConfig":"20"},{"size":221,"mtime":1608709792000,"results":"35","hashOfConfig":"20"},{"size":3040,"mtime":1609640390405,"results":"36","hashOfConfig":"20"},{"size":3969,"mtime":1609650311650,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"11ct4i2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\index.js",["87","88","89"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './components/login';\nimport Register from './components/register';\nimport Hall from './components/hall';\nimport Game from './components/game';\nimport History from './components/history';\nimport GameDetail from './components/gameDetail';\nimport UserDetail from './components/userDetail';\nimport ForgetPassword from './components/forgetPassword';\nimport ChangePassword from './components/changePassword';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Login} exact></Route>\n      <Route exact path=\"/forgetPassword\" component={ForgetPassword} exact></Route>\n      <Route exact path=\"/register\" component={Register} exact></Route>\n      <Route path=\"/hall\" component={Hall} exact></Route>\n      <Route path=\"/history/:id\" component={GameDetail} exact></Route>\n      <Route path=\"/history\" component={History} exact></Route>\n      <Route path=\"/user/:id\" component={UserDetail} exact></Route>\n      <Route path=\"/user/:id/changePassword\" component={ChangePassword} exact></Route>\n      <Route path=\"/game/:id\" component={Game} exact></Route>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n/*\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return <span>{seconds}</span>;\n  }\n};\n\nReactDOM.render(\n  <Countdown date={Date.now() + 30000} renderer={renderer} />,\n  document.getElementById(\"root\")\n);\n\n\n\n\n*/",["90","91"],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\hall\\index.js",["92","93","94","95"],"import { Box, Button, Dialog, DialogTitle, Grid, Typography,DialogContentText,DialogContent,DialogActions, TextField } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport React , {useState,useEffect} from 'react';\r\nimport ListUser from '../listUser';\r\nimport {initializeSocket,getUsetsOnline} from '../socket';\r\nimport URL from '../url';\r\nimport {joinGame, matchRandom, cancelMatchRandom, getMatchRandomResult} from '../socket';\r\nimport ListGames from '../listGames';\r\n\r\nexport default function Hall(props){\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [usersOnline,setUsersOnline] = useState([]);\r\n    const [games,setGames] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [isMatchOption,setIsMatchOption] = useState(false);\r\n    const [idGame,setIdGame] = useState(0);\r\n    const [message,setMessage] = useState('');\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    useEffect(()=>{\r\n        const verifyUser = async () => {\r\n            const response = await fetch(URL.getUrl()+\"users/verify\",{\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                props.history.push('/');\r\n            }\r\n        }\r\n\r\n        const getAllUsers = async () => {\r\n            const responds = await fetch(URL.getUrl()+\"users\",{\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            const data = await responds.json();\r\n            setUsers(data);\r\n        }\r\n\r\n        getUsetsOnline(users => {\r\n            let newUsersOnlineArray =[];\r\n            for(const user in users)\r\n            {\r\n                newUsersOnlineArray = [...newUsersOnlineArray,users[user]];\r\n            }\r\n            setUsersOnline(newUsersOnlineArray);\r\n        });\r\n\r\n        getMatchRandomResult(data => {\r\n            const idGameString = data.idGame.toString()\r\n            joinGame(idGameString,location.state.idUser,(data)=>{\r\n                if(data.success === true){\r\n                    props.history.push({\r\n                        pathname: '/game/'+idGameString,\r\n                        state: {idUser: location.state.idUser}});\r\n                }\r\n            });  \r\n        })\r\n\r\n        verifyUser();\r\n        getAllUsers();\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        const getAllGames = async () => {\r\n            const respond = await fetch(URL.getUrl() + \"game\", {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            const data = await respond.json();\r\n            setGames(data);\r\n        }\r\n        getAllGames();\r\n    },[]); // deploy nhooooooooooooooooooooooooooooooooo bo []\r\n\r\n    useEffect(() => {\r\n        initializeSocket(location.state?.idUser);\r\n    },[]);\r\n\r\n    const handleJoinNewGameClick = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n\r\n    const handleNewGameClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const response = await fetch(URL.getUrl()+\"game/add\",{\r\n            method: 'GET',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }});\r\n\r\n        const dataRespond = await response.json();\r\n\r\n        const idGame = dataRespond.id.toString();\r\n\r\n        joinGame(idGame,location.state.idUser,(data)=>{\r\n            if(data.success === true){\r\n                props.history.push({\r\n                    pathname: '/game/'+idGame,\r\n                    state: {idUser: location.state.idUser}});\r\n            }\r\n        });   \r\n    }\r\n\r\n    const handleChangeIdGame = (e) => {\r\n        setIdGame(e.target.value);\r\n    }\r\n\r\n    const handleJoinGameSubmit = async (e) => {  \r\n        e.preventDefault();\r\n        const response = await fetch(URL.getUrl()+\"game/check\",{\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            },\r\n            body: JSON.stringify({\r\n                idGame: idGame\r\n            })});\r\n            \r\n        const data = await response.json();\r\n        if(data === true)\r\n        {\r\n            joinGame(idGame,location.state.idUser,(data)=>{\r\n                if(data.success === true){\r\n                    props.history.push({\r\n                        pathname: '/game/'+idGame,\r\n                        state: {idUser: location.state.idUser}});\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            setMessage('ID Game is not correct');\r\n        }\r\n    }\r\n\r\n    const handleJoin = (id) => {\r\n        const idGame = id.toString();\r\n        \r\n        joinGame(idGame,location.state.idUser,(data)=>{\r\n            if(data.success === true){\r\n                props.history.push({\r\n                    pathname: '/game/'+idGame,\r\n                    state: {idUser: location.state.idUser}});\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleClickMatchRandom = () => {\r\n        setIsMatchOption(true);\r\n        matchRandom(location.state.idUser);\r\n\r\n    }\r\n    const handleClickCancelMatchRandom = () => {\r\n        setIsMatchOption(false);\r\n        cancelMatchRandom(location.state.idUser);\r\n    }\r\n\r\n    const handleLogOut = () => {\r\n        localStorage.removeItem(\"token\");\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Box m={3}>\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Grid container>\r\n                        <Grid item lg={6} md={6} sm={12}>\r\n                            <Box>\r\n                                <Link to={{\r\n                                    pathname: \"/user/\"+location.state?.idUser,\r\n                                    state: {\r\n                                        idUser: location.state?.idUser\r\n                                    }}} style={{textDecoration: 'none'}}>\r\n                                    <Button variant=\"contained\" color=\"primary\">My Info</Button>\r\n                                </Link>\r\n\r\n                                <Link to={{\r\n                                    pathname: \"/history\",\r\n                                    state: {\r\n                                        idUser: location.state?.idUser\r\n                                    }\r\n                                }} style={{textDecoration: 'none'}}>\r\n                                    <Button variant=\"outlined\"  color=\"primary\">History</Button>\r\n                                </Link>\r\n                                <Button color=\"primary\" onClick={handleLogOut}>Log out</Button>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={12}>\r\n                            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-end\">\r\n                                {\r\n                                    isMatchOption === false ? \r\n                                    <Button  color=\"primary\" onClick={handleClickMatchRandom}>Match Random</Button>\r\n                                    :\r\n                                    <Button  color=\"secondary\" onClick={handleClickCancelMatchRandom}>Cancel Match Random</Button>\r\n                                }\r\n                                <Button onClick={handleJoinNewGameClick} variant=\"outlined\" color=\"primary\">Join Game</Button>\r\n                                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">                           \r\n                                    <DialogTitle id=\"form-dialog-title\">Join Game</DialogTitle>\r\n                                    <form onSubmit={handleJoinGameSubmit}>\r\n                                        <DialogContent>\r\n                                            <TextField\r\n                                                autoFocus\r\n                                                margin=\"dense\"\r\n                                                id=\"name\"\r\n                                                label=\"ID Game\"\r\n                                                type=\"text\"\r\n                                                fullWidth\r\n                                                onChange = {handleChangeIdGame}\r\n                                            />\r\n                                            <Typography>{message}</Typography>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                        <Button onClick={handleClose} color=\"primary\">\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button color=\"primary\" type=\"submit\">\r\n                                            Join\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </form>\r\n                                </Dialog>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleNewGameClick}>New Game</Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item lg={3} md={3} sm={4} xs={12}>\r\n                    <ListUser myId={location.state?.idUser} users={users} usersOnline={usersOnline}></ListUser>\r\n                </Grid>\r\n                <Grid item lg={9} md={9} sm={8} xs={12}>\r\n                    <ListGames games={games} handleJoin={handleJoin}></ListGames>\r\n                </Grid>\r\n            </Grid> \r\n        </Box>\r\n    );\r\n}\r\n","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\userDetail\\index.js",["96"],"import { Box, Button, Grid, Typography } from '@material-ui/core';\r\nimport React,{useState,useEffect} from 'react';\r\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport URL from '../url';\r\n\r\nexport default function UserDetail(props){\r\n    const [user,setUser] = useState({\r\n        email: \"\",\r\n        id: 0,\r\n        isadmin: false,\r\n        isblocked: false,\r\n        name: \"\",\r\n        phone: \"\",\r\n        point: 0,\r\n        totalplays: 0,\r\n        totalwins: 0\r\n    })\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    useEffect(()=>{\r\n        async function verifyUser() {\r\n            const response = await fetch(URL.getUrl()+\"users/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n\r\n        async function getUser(){\r\n            const response = await fetch(URL.getUrl()+\"users/\" + id,{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await response.json();\r\n            setUser(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getUser();\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <Box m={3}>\r\n           <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Link to={{\r\n                        pathname: \"/hall\",\r\n                        state: { idUser: location.state?.idUser}}}>\r\n                            <Button variant=\"outlined\" color=\"primary\">Return To Hall</Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Box boxShadow={4}>\r\n                        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height: '100vh'}}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h5\">\r\n                                    User's Information\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    ID: {user.id}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    Name: {user.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    Email: {user.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    Phone: {user.phone}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    &#9956; Point: {user.point}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    &#9876; Total plays: {user.totalplays}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    &#9818; Total wins: {user.totalwins} ({(user.totalwins/user.totalplays*100).toFixed(3)}%)\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                            {\r\n                                id === location.state?.idUser.toString() ? \r\n                                <Link to={{\r\n                                pathname: \"/user/\"+location.state?.idUser +\"/changePassword\",\r\n                                state: {\r\n                                    idUser: location.state?.idUser\r\n                                }}} style={{textDecoration: 'none'}}>\r\n                                    <Button variant=\"contained\" color=\"primary\">Change Password</Button>\r\n                                </Link> : null\r\n                            }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\login\\index.js",["97"],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\register\\index.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\history\\index.js",["98"],"import { Box, Button, Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport React , {useState,useEffect} from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport URL from '../url';\r\n\r\nexport default function History(props){\r\n    const [games,setGames] = useState([]);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        async function verifyUser() {\r\n            const response = await fetch(URL.getUrl()+\"users/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n\r\n        async function getHistory(){\r\n            const respond = await fetch(URL.getUrl() + \"users/\" + location.state.idUser + \"/history\",{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await respond.json();\r\n            setGames(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getHistory();\r\n    },[]);\r\n\r\n    return(\r\n        <Box m={3}>\r\n           <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Link to={{\r\n                        pathname: \"/hall\",\r\n                        state: { idUser: location.state?.idUser}}}>\r\n                            <Button variant=\"outlined\" color=\"primary\">Return To Hall</Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Typography variant=\"h5\">Your History</Typography>\r\n                    <List>\r\n                        {games.map((value,key) =>(\r\n                            <div key={key}>\r\n                                <Box boxShadow={2} m={2}>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            ID Game: {value.idgame}\r\n                                        </ListItemText>\r\n                                        <Link to={{\r\n                                            pathname: \"/history/\" + value.idgame,\r\n                                            state: { idUser: location.state?.idUser}}}>\r\n                                                <Button>Detail</Button>\r\n                                        </Link>\r\n                                    </ListItem>\r\n                                </Box>    \r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\game\\index.js",["99","100","101","102","103","104","105"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Snackbar, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState,useEffect, useRef } from 'react';\r\nimport {Link, useParams, useLocation, useHistory} from \"react-router-dom\";\r\nimport {leaveGame,sendText,getChatHistory,sendPosition,getBoard, playGame, playGameResponse,getPlayers,giveIn,giveInResponse} from '../socket';\r\nimport Board from '../board';\r\nimport Chat from '../chat';\r\nimport BoardHistory from '../boardHistory';\r\nimport URL from '../url';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Game(props){\r\n\r\n    const [text,setText] = useState('');\r\n    const [chatHistory,setChatHistory] = useState([]);\r\n    const [board,setBoard] = useState([]);\r\n    const [players,setPlayers] = useState([]);\r\n    const [boardHistory,setBoardHistory] = useState([]);\r\n    const [winner,setWinner] = useState({});\r\n    const [openMessage,setOpenMessage] = useState(false);\r\n    const [isPlaySuccess,setIsPlaySuccess] = useState(undefined);\r\n    const [message,setMessage] = useState('');\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { id } = useParams();\r\n\r\n    useEffect(()=>{\r\n        async function verifyUser() {\r\n            const response = await fetch(URL.getUrl()+\"users/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n        verifyUser();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        getChatHistory(data => {\r\n            setChatHistory(data);\r\n        });\r\n\r\n        getBoard(data => {\r\n            if(Object.keys(data.winner).length !== 0)\r\n            {\r\n                setWinner(data.winner);\r\n            }\r\n            if(data.history !== undefined)\r\n            {\r\n                setBoardHistory(data.history);\r\n            }\r\n            if(data.board !== undefined) setBoard(data.board);\r\n        });\r\n\r\n        playGameResponse(data => {\r\n            if(data.success === true)\r\n            {\r\n                setIsPlaySuccess(true);\r\n            }\r\n            if(data.success === false)\r\n            {\r\n                setIsPlaySuccess(false);\r\n            }\r\n            setOpenMessage(true);\r\n        })\r\n\r\n        getPlayers(data=>{\r\n            setPlayers(data.players);\r\n        })\r\n\r\n        giveInResponse(data=>{\r\n            setMessage(data.message);\r\n            setWinner(data.winner);\r\n        })\r\n    },[]);\r\n\r\n    const handleLeaveGame = () => {\r\n        leaveGame(id,location.state.idUser);\r\n    }\r\n\r\n    const handleChangeText = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleSubmitChat = (e) => {\r\n        e.preventDefault();\r\n        sendText(id,location.state.idUser,text);\r\n    }\r\n\r\n    const handleClickSquare = (i) => {  \r\n        sendPosition(id,location.state.idUser, Math.floor(i/20), i%20)\r\n    }\r\n\r\n    const handlePlayGame = (id,idUser) => {\r\n        playGame(id,idUser)\r\n    }\r\n\r\n    const handleGiveIn = () => {\r\n        giveIn(id,location.state.idUser);\r\n    }\r\n\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenMessage(false);\r\n      };\r\n    \r\n\r\n    return(\r\n        <Box m={3}>\r\n           <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Link to={{\r\n                        pathname: \"/hall\",\r\n                        state: { idUser: location.state?.idUser}}}>\r\n                            <Button variant=\"outlined\" color=\"primary\" onClick={handleLeaveGame}>Return To Hall</Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item lg={6} md={12} sm={12} xs ={12}>\r\n                    <Grid container>\r\n                        <Grid item lg={9} md={9} sm={9} xs ={9}>\r\n                            <Typography>Game ID: {id}</Typography>\r\n                            <Typography>Your ID: {location.state?.idUser}</Typography>\r\n                            <Typography>Players:</Typography>\r\n                            <ol>\r\n                                {\r\n                                    players.map((value,key) => (\r\n                                        <li key={key}>  &#9823; {value.id} - {value.name}</li>\r\n                                    ))\r\n                                }\r\n                            </ol>\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} sm={3} xs ={3}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => handlePlayGame(id,location.state?.idUser)}>Play</Button>\r\n                            <Snackbar open={openMessage}>\r\n                            {\r\n                                isPlaySuccess ? \r\n                                <Alert onClose={handleCloseAlert} severity=\"success\">\r\n                                    Play game success\r\n                                </Alert>:\r\n                                isPlaySuccess === false ? \r\n                                <Alert onClose={handleCloseAlert} severity=\"error\">\r\n                                    Game is full\r\n                                </Alert> :\r\n                                <Alert severity=\"info\" onClose={handleCloseAlert}>Welcome to Game</Alert>\r\n                            }\r\n                            </Snackbar>\r\n                            <Button onClick={handleGiveIn}>Give in</Button>\r\n                            <Typography>{message}</Typography>\r\n                            {Object.keys(winner).length !== 0 ? <Typography variant=\"h6\">Winner: &#9818; {winner.id} - {winner.name}</Typography> : null}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Board board={board} handleClickSquare={handleClickSquare}></Board>\r\n                </Grid>\r\n                <Grid item lg={3} md={5} sm={5} xs ={5}>\r\n                    <BoardHistory history={boardHistory}></BoardHistory>\r\n                </Grid>\r\n                <Grid item lg={3} xs={7} sm={7} md={7}>\r\n                    <Chat chatHistory={chatHistory} handleChangeText={handleChangeText} handleSubmitChat={handleSubmitChat}></Chat>\r\n                </Grid>\r\n            </Grid> \r\n        </Box>\r\n    )} ","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\gameDetail\\index.js",["106"],"import { Box, Button, Grid, Typography } from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport Board from '../board';\r\nimport BoardHistory from '../boardHistory';\r\nimport Chat from '../chat';\r\nimport URL from '../url';\r\n\r\nexport default function GameDetail(props){\r\n    const [game,setGame] = useState({});\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [boardHistory,setBoardHistory] = useState([]);\r\n    const [players,setPlayers] = useState([]);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n\r\n    useEffect(()=>{\r\n        async function verifyUser() {\r\n            const response = await fetch(URL.getUrl()+\"users/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n\r\n        async function getGame(){\r\n            const respond = await fetch(URL.getUrl() + \"game/\" + id,{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await respond.json();\r\n            setGame(data[0]);\r\n        }\r\n\r\n        async function getChat(){\r\n            const respond = await fetch(URL.getUrl()+ 'game/' + id + '/chat',{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await respond.json();\r\n            setChatHistory(data);\r\n        }\r\n\r\n        async function getBoardHistory(){\r\n            const respond = await fetch(URL.getUrl()+ 'game/' + id + '/history',{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await respond.json();\r\n            setBoardHistory(data);\r\n        }\r\n\r\n        async function getGamePlayers(){\r\n            const respond = await fetch(URL.getUrl()+ 'game/' + id + '/players',{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await respond.json();\r\n            setPlayers(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getGame();\r\n        getChat();\r\n        getBoardHistory();\r\n        getGamePlayers();\r\n    },[])\r\n\r\n    const handleClickSquare = () => {\r\n\r\n    }\r\n\r\n    return(\r\n        <Box m={3}>\r\n           <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Link to={{\r\n                        pathname: \"/history\",\r\n                        state: { idUser: location.state?.idUser}}}>\r\n                            <Button variant=\"outlined\" color=\"primary\">Return To History</Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    {\r\n                        game !== undefined ? \r\n                        <Typography variant = \"h5\">Winner ID: &#9818;{game.winner}</Typography> : null\r\n                    }\r\n                    <Typography>Players: </Typography>\r\n                    <ol>\r\n                        {\r\n                        players.map((value,key) => (\r\n                            <li key={key}>  &#9823; {value.iduser} - {value.Account.name}</li>\r\n                        ))\r\n                        }\r\n                    </ol>\r\n                </Grid>\r\n                <Grid item lg={6} md={12} sm={12} xs ={12}>\r\n                {\r\n                    game.boards !== undefined  ? \r\n                    <Board board={game.boards} handleClickSquare={handleClickSquare}></Board>  : null\r\n                }\r\n                    \r\n                </Grid>\r\n                <Grid item lg={3} md={5} sm={5} xs ={5}>\r\n                    <BoardHistory history={boardHistory}></BoardHistory> \r\n                </Grid>\r\n                <Grid item lg={3} xs={7} sm={7} md={7}>\r\n                    <Chat isDisableChat={true} chatHistory={chatHistory}></Chat>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\url.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\socket.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listUser\\index.js",["107"],"import { Box, Grid, makeStyles, Tooltip, Typography} from '@material-ui/core';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    userContainer: {\r\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)',\r\n    },\r\n    stateUserIcon:{\r\n        fontSize: '12px'\r\n    },\r\n    DetailUserIcon:{\r\n        fontSize: '20px',\r\n        float: 'right',\r\n        '&:hover': {\r\n            boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)',\r\n        }\r\n    },\r\n    stateUserIconColorOnline:{\r\n        color: '#00d700'\r\n    },\r\n    stateUserIconColorOffline:{\r\n        color: '#bcbcbc'\r\n    },\r\n    userBox: {\r\n        height: '500px',\r\n        overflow: 'scroll',\r\n        overflowX: 'hidden'\r\n    },\r\n    first: {\r\n        border: '5px inset #dc0000',\r\n       \r\n    },\r\n    second: {\r\n        border: '5px groove #0000d8',\r\n    },\r\n    third: {\r\n        border: '5px solid #7b007b',\r\n    },\r\n   \r\n});\r\n\r\nexport default function ListUser({myId,users,usersOnline})\r\n{\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const handleClickUserDetail = (id) => {\r\n        history.push({\r\n            pathname: '/user/'+id,\r\n            state:{\r\n                idUser: myId\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" className={classes.userContainer}>\r\n            <Box cellHeight={200}  className={classes.userBox} p={2}>\r\n                <Typography variant=\"h6\">HONORABLE PLAYERS LIST</Typography>\r\n                {users.map((value,key) => (\r\n                    Object.values(usersOnline).indexOf(value.id) >= 0 ?\r\n                        <Grid item key={key}>\r\n                            <Typography className={key === 0 ? classes.first : key === 1 ? classes.second : key === 2 ? classes.third : ''}>\r\n                                <FiberManualRecordIcon className={[classes.stateUserIconColorOnline,classes.stateUserIcon].join(\" \")}/>\r\n                                &nbsp;&nbsp;{value.id} - <b>{value.name}</b>\r\n                                {\r\n                                    myId === value.id ? <span>&nbsp;&#129409;</span> : null\r\n                                }\r\n                                <Tooltip title=\"Detail User\" aria-label=\"add\">\r\n                                    <DetailsIcon onClick={() => handleClickUserDetail(value.id)} className={classes.DetailUserIcon}></DetailsIcon>\r\n                                </Tooltip>\r\n                            </Typography>\r\n                            <hr></hr>\r\n                        </Grid>\r\n                        : \r\n                        <Grid item key={key} >\r\n                            <Typography className={key === 0 ? classes.first : key === 1 ? classes.second : key === 2 ? classes.third : ''}>\r\n                                <FiberManualRecordIcon className={[classes.stateUserIconColorOffline,classes.stateUserIcon].join(\" \")}/>\r\n                                &nbsp;&nbsp;{value.id} - <b>{value.name}</b>\r\n                                <Tooltip title=\"Detail User\" aria-label=\"add\">\r\n                                    <DetailsIcon  onClick={() => handleClickUserDetail(value.id)} className={classes.DetailUserIcon}></DetailsIcon>\r\n                                </Tooltip>\r\n                            </Typography>\r\n                            <hr></hr>\r\n                        </Grid>\r\n                ))}\r\n            </Box>\r\n        </Grid>\r\n        \r\n    );\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\listGames\\index.js",["108"],"import { Box, Button, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { joinGame } from '../socket';\r\n\r\nexport default function ListGames({games,handleJoin}){\r\n    return (\r\n        <List>\r\n            {games.map((value,key) =>(\r\n                <div key={key}>\r\n                    <Box boxShadow={2} m={2}>\r\n                        <ListItem>\r\n                            <ListItemText>\r\n                                {value.id}\r\n                            </ListItemText>\r\n                            <Button onClick={() => handleJoin(value.id)}>Join</Button>\r\n                        </ListItem>\r\n                    </Box>    \r\n                </div>\r\n            ))}\r\n        </List>)\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\board\\index.js",["109"],"import { Box, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Square from '../square';\r\n\r\nexport default function Board({board,handleClickSquare}){\r\n    return(\r\n        <Box>    \r\n            <Box flexWrap=\"wrap\" style={{width: \"400px\",margin: 'auto'}}>\r\n            {\r\n                board.map((value,key) => (\r\n                    <Square key={key} value={value} clicked={() => handleClickSquare(key)}></Square>\r\n                ))\r\n            }\r\n            </Box>\r\n        </Box>)\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\chat\\index.js",["110","111","112"],"import { Box, Button, GridList, GridListTile, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport React ,{useState} from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    chatBox: {\r\n        height: '500px',\r\n        overflow: 'scroll',\r\n        overflowX: 'hidden'\r\n    },\r\n    chatWrap : {\r\n        wordWrap: 'break-word'\r\n    }\r\n});\r\n\r\nexport default function Chat({chatHistory,handleChangeText,handleSubmitChat,isDisableChat}){\r\n    const classes = useStyles();\r\n    return(\r\n        <Box>\r\n            \r\n            <Box cellHeight={160} boxShadow={2} p={2} className={classes.chatBox}>\r\n            <Typography variant=\"h5\">Chat:</Typography>\r\n                {\r\n                    chatHistory.map((value,key) => (\r\n                    <Typography key={key} className={classes.chatWrap}><b>{value.user.id} - {value.user.name}</b>: {value.content}</Typography>\r\n                    ))\r\n                }\r\n            </Box>\r\n\r\n            {\r\n                isDisableChat ? \r\n                null : \r\n                <Box mt={2}>\r\n                    <form onSubmit={handleSubmitChat}>\r\n                        <TextField label=\"Text here\" variant=\"outlined\" onChange={handleChangeText} fullWidth multiline rowsMax={4}></TextField>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n                    </form>\r\n                </Box>\r\n            }\r\n            \r\n        </Box>);\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\boardHistory\\index.js",[],"C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\square\\index.js",["113"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function Square({value,clicked}){\r\n    return(<button style={{width: '20px',height: '20px'}} onClick={clicked}>{value}</button>)\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\forgetPassword\\index.js",["114","115","116","117"],"import { Box, Button, CssBaseline, Grid, makeStyles, MuiThemeProvider, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React , {useState} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport URL from '../url';\r\n\r\nconst useStyles = makeStyles({\r\n    paperContainer: {\r\n        paddingTop: '3em',\r\n        paddingLeft: '1em',\r\n        paddingRight: '1em',\r\n        paddingBottom: '1em',\r\n        width: '389px'\r\n    }\r\n});\r\n\r\nexport default function Login(props){\r\n    const [email,setEmail] = useState('');\r\n    const [message,setMessage] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const submitForget = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(URL.getUrl()+\"login/forgotPassword\",{\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n            email: email})});\r\n        \r\n        if(response.status === 200)\r\n        { \r\n            setMessage(\"Sent to email\");\r\n        }\r\n        if(response.status === 401){\r\n            setMessage(\"Email not existed\");\r\n        } \r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n   \r\n\r\n    \r\n    return (\r\n        <>\r\n            <MuiThemeProvider>\r\n                <CssBaseline></CssBaseline>\r\n                <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height: '100vh'}}>\r\n                    <Grid item >\r\n                        <Typography variant={\"h4\"}>Caro Game</Typography>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Grid item lg={4}>\r\n                        <Paper elevation={3} className={classes.paperContainer}>\r\n                            <Typography style={{textAlign: 'center'}}>Forget password</Typography>\r\n                            <form onSubmit={submitForget}>\r\n                                <TextField  name=\"email\" label=\"Email\" onChange={handleChangeEmail} fullWidth>\r\n                                </TextField>\r\n                                <br></br>\r\n                                <Typography style={{color: 'red'}}>{message}</Typography>\r\n                                <br></br>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n                                    Send to email\r\n                                </Button>\r\n                            </form><br></br>\r\n                           \r\n                                \r\n                            <br></br>\r\n                            <Typography style={{textAlign: 'center'}}><Link to=\"/\">Login</Link></Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        </>);\r\n}","C:\\Users\\PV\\Desktop\\PTUDWeb_NC\\user\\user-frontend\\src\\components\\changePassword\\index.js",["118"],{"ruleId":"119","severity":1,"message":"120","line":17,"column":47,"nodeType":"121","endLine":17,"endColumn":52},{"ruleId":"119","severity":1,"message":"120","line":18,"column":70,"nodeType":"121","endLine":18,"endColumn":75},{"ruleId":"119","severity":1,"message":"120","line":19,"column":58,"nodeType":"121","endLine":19,"endColumn":63},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":61,"nodeType":"128","messageId":"129","endLine":1,"endColumn":78},{"ruleId":"126","severity":1,"message":"130","line":19,"column":11,"nodeType":"128","messageId":"129","endLine":19,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":75,"column":7,"nodeType":"133","endLine":75,"endColumn":9,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":96,"column":7,"nodeType":"133","endLine":96,"endColumn":9,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":52,"column":7,"nodeType":"133","endLine":52,"endColumn":9,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"130","line":45,"column":11,"nodeType":"128","messageId":"129","endLine":45,"endColumn":18},{"ruleId":"131","severity":1,"message":"139","line":42,"column":7,"nodeType":"133","endLine":42,"endColumn":9,"suggestions":"140"},{"ruleId":"126","severity":1,"message":"141","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"142","line":1,"column":31,"nodeType":"128","messageId":"129","endLine":1,"endColumn":44},{"ruleId":"126","severity":1,"message":"143","line":1,"column":46,"nodeType":"128","messageId":"129","endLine":1,"endColumn":59},{"ruleId":"126","severity":1,"message":"144","line":1,"column":61,"nodeType":"128","messageId":"129","endLine":1,"endColumn":72},{"ruleId":"126","severity":1,"message":"145","line":1,"column":90,"nodeType":"128","messageId":"129","endLine":1,"endColumn":99},{"ruleId":"126","severity":1,"message":"146","line":2,"column":37,"nodeType":"128","messageId":"129","endLine":2,"endColumn":43},{"ruleId":"131","severity":1,"message":"147","line":46,"column":7,"nodeType":"133","endLine":46,"endColumn":9,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"137","line":91,"column":7,"nodeType":"133","endLine":91,"endColumn":9,"suggestions":"149"},{"ruleId":"126","severity":1,"message":"150","line":4,"column":17,"nodeType":"128","messageId":"129","endLine":4,"endColumn":25},{"ruleId":"126","severity":1,"message":"151","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"152","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":21},{"ruleId":"126","severity":1,"message":"153","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"154","line":1,"column":33,"nodeType":"128","messageId":"129","endLine":1,"endColumn":45},{"ruleId":"126","severity":1,"message":"150","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"126","severity":1,"message":"152","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":16},{"ruleId":"126","severity":1,"message":"155","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"156","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":19},{"ruleId":"126","severity":1,"message":"157","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":21},{"ruleId":"126","severity":1,"message":"158","line":5,"column":15,"nodeType":"128","messageId":"129","endLine":5,"endColumn":25},{"ruleId":"131","severity":1,"message":"147","line":31,"column":7,"nodeType":"133","endLine":31,"endColumn":9,"suggestions":"159"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'DialogContentText' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state.idUser' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'location.state?.idUser'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'history' and 'location.state.idUser'. Either include them or remove the dependency array.",["165"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["166"],["167"],"'useState' is defined but never used.","'joinGame' is defined but never used.","'Button' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Box' is defined but never used.","'GoogleLogin' is defined but never used.","'FacebookLogin' is defined but never used.","'useHistory' is defined but never used.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"173","fix":"179"},{"desc":"177","fix":"180"},"Update the dependencies array to be: [location.state.idUser, props.history]",{"range":"181","text":"182"},"Update the dependencies array to be: [location.state?.idUser]",{"range":"183","text":"184"},"Update the dependencies array to be: [history, id]",{"range":"185","text":"186"},"Update the dependencies array to be: [history, location.state.idUser]",{"range":"187","text":"188"},"Update the dependencies array to be: [history]",{"range":"189","text":"190"},{"range":"191","text":"186"},{"range":"192","text":"190"},[2797,2799],"[location.state.idUser, props.history]",[3496,3498],"[location.state?.idUser]",[1619,1621],"[history, id]",[1464,1466],"[history, location.state.idUser]",[1851,1853],"[history]",[3190,3192],[1092,1094]]