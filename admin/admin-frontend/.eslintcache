[{"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\index.js":"1","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\login\\index.js":"2","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\url.js":"3","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\index.js":"4","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\header\\index.js":"5","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\index.js":"6","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\userDetail\\index.js":"7","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\gameTable\\index.js":"8","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\userGames\\index.js":"9","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\gameDetail\\index.js":"10","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\board\\index.js":"11","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\board\\square\\index.js":"12","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\history\\index.js":"13","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\chat\\index.js":"14"},{"size":1173,"mtime":1609324530922,"results":"15","hashOfConfig":"16"},{"size":3882,"mtime":1609317717603,"results":"17","hashOfConfig":"16"},{"size":276,"mtime":1609207939065,"results":"18","hashOfConfig":"16"},{"size":4516,"mtime":1609323838285,"results":"19","hashOfConfig":"16"},{"size":919,"mtime":1609317968201,"results":"20","hashOfConfig":"16"},{"size":1623,"mtime":1609382704509,"results":"21","hashOfConfig":"16"},{"size":7091,"mtime":1609320946562,"results":"22","hashOfConfig":"16"},{"size":1619,"mtime":1609382684077,"results":"23","hashOfConfig":"16"},{"size":1695,"mtime":1609323228444,"results":"24","hashOfConfig":"16"},{"size":4664,"mtime":1609382777365,"results":"25","hashOfConfig":"16"},{"size":455,"mtime":1609324499813,"results":"26","hashOfConfig":"16"},{"size":176,"mtime":1609324490399,"results":"27","hashOfConfig":"16"},{"size":985,"mtime":1609382113827,"results":"28","hashOfConfig":"16"},{"size":928,"mtime":1609382547225,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"np511s",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\index.js",[],["64","65"],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\login\\index.js",["66"],"import { Button, CssBaseline, Grid, makeStyles, MuiThemeProvider, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React , {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport URL from '../url';\r\n\r\nconst useStyles = makeStyles({\r\n    paperContainer: {\r\n        paddingTop: '3em',\r\n        paddingLeft: '1em',\r\n        paddingRight: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    googleLoginBtn:{\r\n        marginTop: '1em',\r\n        width: '100%'\r\n    },\r\n    facebookLoginBtn:{\r\n        marginTop: '10px',\r\n        background: '#365899',\r\n        border: '1px solid transparent',\r\n        borderRadius: '2px',\r\n        alignItems: 'center',\r\n        boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\r\n        color: '#ffffff',\r\n        fontSize: '14px',\r\n        width: '100%',\r\n        textAlign: 'left',\r\n        fontWeight: '500',\r\n        display: 'inline-flex',\r\n        paddingTop: '10px',\r\n        paddingRight: '10px',\r\n        paddingBottom: '10px',\r\n        paddingLeft: '15px'\r\n    },\r\n});\r\n\r\nexport default function Login(props){\r\n    const [loginData,setLoginData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [message,setMessage] = useState('');\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const submitLogin = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(URL.getUrl()+\"login\",{\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n        username: loginData.username,\r\n        password: loginData.password})});\r\n\r\n\r\n        if(response.status === 200)\r\n        { \r\n            const data = await response.json();\r\n            localStorage.setItem('token',data.token); \r\n            history.push(\"/users\");            \r\n        }\r\n        else setMessage(\"Username or password is not correct\")\r\n    }\r\n\r\n    const onChangeUsername = (e) => {\r\n        setLoginData({...loginData, username: e.target.value});\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setLoginData({...loginData, password: e.target.value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MuiThemeProvider>\r\n                <CssBaseline></CssBaseline>\r\n                <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height: '100vh'}}>\r\n                    <Grid item >\r\n                        <Typography variant={\"h4\"}>Caro Game Admin</Typography>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Grid item lg={4}>\r\n                        <Paper elevation={3} className={classes.paperContainer}>\r\n                            <Typography style={{textAlign: 'center'}}>Login</Typography>\r\n                            <form onSubmit={submitLogin}>\r\n                                <TextField  name=\"username\" label=\"Username\" onChange={onChangeUsername} fullWidth>\r\n                                </TextField>\r\n                                <TextField  name=\"password\" label=\"Password\" type=\"password\" onChange={onChangePassword} fullWidth>\r\n                                </TextField>\r\n                                <br></br>\r\n                                <Typography style={{color: 'red'}}>{message}</Typography>\r\n                                <br></br>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n                                    Login\r\n                                </Button>\r\n                            </form>\r\n                                \r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        </>);\r\n}","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\url.js",[],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\index.js",["67"],"import { Box, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../header';\r\nimport url from '../url';\r\n\r\nexport default function Users(props){\r\n    const [users,setUsers] = useState([]);\r\n    const [usersToShow,setUsersToShow] = useState([]);\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n\r\n        const verifyUser = async () => {\r\n            const response = await fetch(url.getUrl()+\"account/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }        \r\n        async function getAllUsers(){\r\n            const respond = await fetch(url.getUrl() + \"account\",{\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }});\r\n            const data = await respond.json();\r\n            setUsers(data);\r\n            setUsersToShow(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getAllUsers();\r\n    },[]);\r\n\r\n    const handleChangeSearch = (e) => {\r\n        const filter = e.target.value;\r\n        const newList = users.filter(u => u.name.toLowerCase().includes(filter) || u.email.toLowerCase().includes(filter));\r\n        setUsersToShow(newList);\r\n    }\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Header></Header>\r\n            <Box>\r\n                <TextField onChange={handleChangeSearch} label=\"Search user\"></TextField>\r\n            </Box>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <b>ID USER</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"right;\">\r\n                                <b>USERNAME</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"right;\">\r\n                                <b>NAME</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"right;\">\r\n                                <b>EMAIL</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"right;\">\r\n                                <b>PHONE</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"right;\">\r\n                                <b>#</b>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            usersToShow.map((value,key)=>(\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        {value.id}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right;\">\r\n                                        {value.username}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right;\">\r\n                                        {value.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right;\">\r\n                                        {value.email}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right;\">\r\n                                        {value.phone}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right;\">\r\n                                        <Link to={'users/'+ value.id}><Button>Detail</Button></Link>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n          \r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\header\\index.js",[],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\index.js",["68","69","70","71","72","73","74","75"],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\userDetail\\index.js",["76","77","78","79","80","81","82","83"],"import { Box, Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../../header';\r\nimport URL from '../../url';\r\n\r\nexport default function UserDetail(props){\r\n    const [user,setUser] = useState({\r\n        email: \"\",\r\n        id: 3,\r\n        isadmin: false,\r\n        isblocked: false,\r\n        name: \"\",\r\n        phone: \"\",\r\n        point: 0,\r\n        totalplays: 0,\r\n        totalwins: 0\r\n    })\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n\r\n    useEffect(()=>{\r\n        async function verifyUser() {\r\n            const response = await fetch(URL.getUrl()+\"account/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }\r\n\r\n        async function getUser(){\r\n            const response = await fetch(URL.getUrl()+\"account/\" + id,{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setUser(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getUser();\r\n    },[])\r\n\r\n    const hanleBlockUser = async () => {\r\n        const respond = await fetch(URL.getUrl() + \"account/\" + id + \"/block\",{\r\n            method: 'GET',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }});\r\n\r\n        if(respond.status === 200)\r\n        {\r\n            console.log(\"huhu\");\r\n            setUser({...user,isblocked: true});\r\n        }\r\n    }\r\n\r\n    const handleUnblockUser = async () => {\r\n        const respond = await fetch(URL.getUrl() + \"account/\" + id + \"/unblock\",{\r\n            method: 'GET',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }});\r\n\r\n        if(respond.status === 200)\r\n        {\r\n            setUser({...user,isblocked: false});\r\n        }\r\n    }\r\n\r\n    const handleGetGamesOfUser = async () => {\r\n        history.push('/users/' + id + \"/games\");\r\n    }\r\n\r\n    return(\r\n        <Box m={3}>\r\n           <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Header></Header>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Box boxShadow={4}>\r\n                        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height: '100vh'}}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">\r\n                                    User's Information\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>ID:</b> {user.id}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>Name:</b> {user.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>Email:</b> {user.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>Phone:</b> {user.phone}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>&#9956; Point:</b> {user.point}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>&#9876; Total plays:</b> {user.totalplays}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography>\r\n                                    <b>&#9818; Total wins:</b> {user.totalwins} ({user.totalwins/user.totalplays*100}%)\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {\r\n                                    user.isadmin ?                                  \r\n                                    <Typography>\r\n                                       Is Admin\r\n                                    </Typography>\r\n                                    :\r\n                                    <Typography>\r\n                                       Is Member\r\n                                    </Typography>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {\r\n                                    user.isblocked ? \r\n                                    <Typography variant=\"h5\">\r\n                                        Blocked\r\n                                    </Typography> : null\r\n                                }\r\n                            </Grid>\r\n                            <br></br>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" onClick={handleGetGamesOfUser} >Games user played</Button>\r\n                            </Grid><br></br>\r\n                            <Grid item>\r\n                                {\r\n                                    user.isblocked ? \r\n                                    <Button onClick={handleUnblockUser} variant=\"contained\" color=\"primary\">Unblock user</Button> \r\n                                    :\r\n                                    <Button onClick={hanleBlockUser} variant=\"contained\" color=\"secondary\">Block user</Button>\r\n                                }\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\gameTable\\index.js",[],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\user\\userGames\\index.js",["84"],"import { Box } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport GameTable from '../../games/gameTable';\r\nimport Header from '../../header';\r\nimport url from '../../url';\r\n\r\nexport default function UserGames(props){\r\n    const [games,setGames] = useState([]);\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n    useEffect(()=>{\r\n\r\n        const verifyUser = async () => {\r\n            const response = await fetch(url.getUrl()+\"account/verify\",{\r\n                method: 'GET',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }});\r\n\r\n            if(response.status === 401)\r\n            {\r\n                history.push('/');\r\n            }\r\n        }        \r\n        async function getAllGames(){\r\n            console.log(url.getUrl() + \"account/\" + id + \"/games\");\r\n            const respond = await fetch(url.getUrl() + \"account/\" + id + \"/games\",{\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }});\r\n            const data = await respond.json();\r\n            setGames(data);\r\n        }\r\n\r\n        verifyUser();\r\n        getAllGames();\r\n    },[]);\r\n\r\n    return(\r\n        <Box m={2}>\r\n            <Header></Header>\r\n            <GameTable games={games}></GameTable>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\gameDetail\\index.js",["85","86","87","88"],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\board\\index.js",["89"],"import { Box, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Square from './square';\r\n\r\nexport default function Board({board}){\r\n    return(\r\n        <Box>    \r\n            <Box flexWrap=\"wrap\" style={{width: \"400px\",margin: 'auto'}}>\r\n            {\r\n                board.map((value,key) => (\r\n                    <Square key={key} value={value}></Square>\r\n                ))\r\n            }\r\n            </Box>\r\n        </Box>)\r\n}","C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\board\\square\\index.js",[],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\history\\index.js",[],"C:\\Users\\tuanaudg\\Downloads\\xyz\\xyz\\admin-frontend\\src\\components\\games\\chat\\index.js",["90","91","92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":43,"column":7,"nodeType":"105","endLine":43,"endColumn":9,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":21},{"ruleId":"99","severity":1,"message":"108","line":1,"column":23,"nodeType":"101","messageId":"102","endLine":1,"endColumn":28},{"ruleId":"99","severity":1,"message":"109","line":1,"column":30,"nodeType":"101","messageId":"102","endLine":1,"endColumn":39},{"ruleId":"99","severity":1,"message":"110","line":1,"column":41,"nodeType":"101","messageId":"102","endLine":1,"endColumn":50},{"ruleId":"99","severity":1,"message":"111","line":1,"column":52,"nodeType":"101","messageId":"102","endLine":1,"endColumn":66},{"ruleId":"99","severity":1,"message":"112","line":1,"column":68,"nodeType":"101","messageId":"102","endLine":1,"endColumn":77},{"ruleId":"99","severity":1,"message":"113","line":1,"column":79,"nodeType":"101","messageId":"102","endLine":1,"endColumn":87},{"ruleId":"103","severity":1,"message":"104","line":41,"column":7,"nodeType":"105","endLine":41,"endColumn":9,"suggestions":"114"},{"ruleId":"99","severity":1,"message":"108","line":1,"column":29,"nodeType":"101","messageId":"102","endLine":1,"endColumn":34},{"ruleId":"99","severity":1,"message":"109","line":1,"column":36,"nodeType":"101","messageId":"102","endLine":1,"endColumn":45},{"ruleId":"99","severity":1,"message":"110","line":1,"column":47,"nodeType":"101","messageId":"102","endLine":1,"endColumn":56},{"ruleId":"99","severity":1,"message":"111","line":1,"column":58,"nodeType":"101","messageId":"102","endLine":1,"endColumn":72},{"ruleId":"99","severity":1,"message":"112","line":1,"column":74,"nodeType":"101","messageId":"102","endLine":1,"endColumn":83},{"ruleId":"99","severity":1,"message":"113","line":1,"column":85,"nodeType":"101","messageId":"102","endLine":1,"endColumn":93},{"ruleId":"99","severity":1,"message":"100","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"115","line":55,"column":7,"nodeType":"105","endLine":55,"endColumn":9,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"115","line":43,"column":7,"nodeType":"105","endLine":43,"endColumn":9,"suggestions":"117"},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"118","line":15,"column":11,"nodeType":"101","messageId":"102","endLine":15,"endColumn":19},{"ruleId":"103","severity":1,"message":"115","line":92,"column":7,"nodeType":"105","endLine":92,"endColumn":9,"suggestions":"119"},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":21},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":21},{"ruleId":"99","severity":1,"message":"120","line":1,"column":23,"nodeType":"101","messageId":"102","endLine":1,"endColumn":31},{"ruleId":"99","severity":1,"message":"121","line":1,"column":33,"nodeType":"101","messageId":"102","endLine":1,"endColumn":45},{"ruleId":"99","severity":1,"message":"122","line":1,"column":59,"nodeType":"101","messageId":"102","endLine":1,"endColumn":68},{"ruleId":"99","severity":1,"message":"123","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'Button' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.",["127"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["128"],["129"],"'location' is assigned a value but never used.",["130"],"'GridList' is defined but never used.","'GridListTile' is defined but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"134","fix":"137"},"Update the dependencies array to be: [history]",{"range":"138","text":"139"},{"range":"140","text":"139"},"Update the dependencies array to be: [history, id]",{"range":"141","text":"142"},{"range":"143","text":"142"},{"range":"144","text":"142"},[1578,1580],"[history]",[1469,1471],[1748,1750],"[history, id]",[1546,1548],[3226,3228]]